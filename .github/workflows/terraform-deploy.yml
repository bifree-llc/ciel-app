name: "Infra Deploy"

on:
  push:
    branches:
      - master
    paths:
      - 01_infra/**
      - .github/workflows/**
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-northeast-1
  TF_VERSION: 0.14.6
  TF_PROJECT: ciel-app
  TF_ENVIRONMENT: production

defaults:
  run:
    shell: bash
    working-directory: "01_infra/"

jobs:
  preview:
    name: Preview
    runs-on: ubuntu-latest
    steps:
      - name: Cehckout repository
        uses: actions/checkout@v4
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: Terraform format
        run: |
          terraform fmt -check
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Terraform init
        run: |
          terraform init -no-color
      - name: Terraform validate
        run: |
          terraform validate -no-color
      - name: Terraform plan
        id: plan
        run: |
          terraform plan \
            -var 'project=${{ env.TF_PROJECT }}' \
            -var 'environment=${{ env.TF_ENVIRONMENT }}' \
            -input=false \
            -no-color \
            -detailed-exitcode
  deploy:
    name: Deploy
    needs: preview
    if: needs.preview.outputs.TF_PLAN_EXITCODE == 2
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Cehckout repository
        uses: actions/checkout@v4
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: Terraform format
        run: |
          terraform fmt -check
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
      - name: Terraform init
        run: |
          terraform init -no-color
      - name: Terraform apply
        id: apply
        run: |
          terraform apply \
            -var 'project=${{ env.TF_PROJECT }}' \
            -var 'environment=${{ env.TF_ENVIRONMENT }}' \
            -input=false \
            -no-color \
            -auto-approve
